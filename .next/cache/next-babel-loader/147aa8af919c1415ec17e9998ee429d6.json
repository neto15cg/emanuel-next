{"ast":null,"code":"var _jsxFileName = \"/home/eliezer/Projects/nextjs/emanuel/src/components/slyce/grid/col/Col.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { theme } from '@styles/theme/theme';\nimport { device } from '@styles/tools/breakpoints.styles';\nimport { color } from 'styled-system';\nconst noCol = 24;\nconst {\n  gutterSpace\n} = theme.global;\n\nconst getWidthGrid = (value, offset) => {\n  const width = value * 100 / noCol;\n  let offsetValue = '';\n\n  if (offset && noCol - value >= offset) {\n    const margin = offset * 100 / noCol;\n    offsetValue = `margin-left: ${margin.toString().length > 4 ? margin.toFixed(4) : margin}%;`;\n  }\n\n  const widthFixed = width.toString().length > 4 ? width.toFixed(4) : width;\n  return `flex: 0 0 ${widthFixed}%;\n  max-width: ${widthFixed}%;\n  ${offsetValue}`;\n};\n\nconst ResponsiveCol = css`\n  ${props => props.small && `${device.mobile} {${getWidthGrid(props.small, props.offsetLeft)}}`}\n  ${props => props.medium && `${device.tablet} {${getWidthGrid(props.medium, props.offsetLeft)}}`}\n  ${props => props.large && `${device.desktop} {${getWidthGrid(props.large, props.offsetLeft)}}`}\n`;\nconst ColCustom = styled.div`\n  position: relative;\n  padding-left: ${props => props.noGutter ? 0 : `${gutterSpace / 2}px`};\n  padding-right: ${props => props.noGutter ? 0 : `${gutterSpace / 2}px`};\n  min-height: 1px;\n  flex-grow: 1;\n  flex-basis: 0;\n  ${props => props.alignSelf && `align-self: ${props.alignSelf};`}\n  ${props => props.small === props.medium && props.small === props.large ? getWidthGrid(props.small, props.offsetLeft) : ResponsiveCol};\n  ${color}\n`;\n\nconst Col = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(ColCustom, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 51\n    }\n  }), children);\n};\n\nexport default Col;","map":{"version":3,"sources":["/home/eliezer/Projects/nextjs/emanuel/src/components/slyce/grid/col/Col.tsx"],"names":["React","styled","css","theme","device","color","noCol","gutterSpace","global","getWidthGrid","value","offset","width","offsetValue","margin","toString","length","toFixed","widthFixed","ResponsiveCol","props","small","mobile","offsetLeft","medium","tablet","large","desktop","ColCustom","div","noGutter","alignSelf","Col","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAGA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBJ,KAAK,CAACK,MAA9B;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAgBC,MAAhB,KAAmC;AACtD,QAAMC,KAAK,GAAIF,KAAK,GAAG,GAAT,GAAgBJ,KAA9B;AACA,MAAIO,WAAW,GAAG,EAAlB;;AAEA,MAAIF,MAAM,IAAIL,KAAK,GAAGI,KAAR,IAAiBC,MAA/B,EAAuC;AACrC,UAAMG,MAAM,GAAIH,MAAM,GAAG,GAAV,GAAiBL,KAAhC;AACAO,IAAAA,WAAW,GAAI,gBAAeC,MAAM,CAACC,QAAP,GAAkBC,MAAlB,GAA2B,CAA3B,GAA+BF,MAAM,CAACG,OAAP,CAAe,CAAf,CAA/B,GAAmDH,MAAO,IAAxF;AACD;;AAED,QAAMI,UAAU,GAAGN,KAAK,CAACG,QAAN,GAAiBC,MAAjB,GAA0B,CAA1B,GAA8BJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAA9B,GAAiDL,KAApE;AACA,SAAQ,aAAYM,UAAW;eAClBA,UAAW;IACtBL,WAAY,EAFd;AAGD,CAbD;;AAeA,MAAMM,aAAa,GAAGjB,GAAI;IACrBkB,KAAD,IAAqBA,KAAK,CAACC,KAAN,IAAgB,GAAEjB,MAAM,CAACkB,MAAO,KAAIb,YAAY,CAACW,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACG,UAApB,CAAgC,GAAG;IACvGH,KAAD,IAAqBA,KAAK,CAACI,MAAN,IAAiB,GAAEpB,MAAM,CAACqB,MAAO,KAAIhB,YAAY,CAACW,KAAK,CAACI,MAAP,EAAeJ,KAAK,CAACG,UAArB,CAAiC,GAAG;IACzGH,KAAD,IAAqBA,KAAK,CAACM,KAAN,IAAgB,GAAEtB,MAAM,CAACuB,OAAQ,KAAIlB,YAAY,CAACW,KAAK,CAACM,KAAP,EAAcN,KAAK,CAACG,UAApB,CAAgC,GAAG;CAH7G;AAMA,MAAMK,SAAS,GAAG3B,MAAM,CAAC4B,GAAI;;kBAEVT,KAAD,IAAsBA,KAAK,CAACU,QAAN,GAAiB,CAAjB,GAAsB,GAAEvB,WAAW,GAAG,CAAE,IAAK;mBACjEa,KAAD,IAAsBA,KAAK,CAACU,QAAN,GAAiB,CAAjB,GAAsB,GAAEvB,WAAW,GAAG,CAAE,IAAK;;;;IAIjFa,KAAD,IAAqBA,KAAK,CAACW,SAAN,IAAoB,eAAcX,KAAK,CAACW,SAAU,GAAG;IACzEX,KAAD,IAAsBA,KAAK,CAACC,KAAN,KAAgBD,KAAK,CAACI,MAAtB,IAAgCJ,KAAK,CAACC,KAAN,KAAgBD,KAAK,CAACM,KAAtD,GAA8DjB,YAAY,CAACW,KAAK,CAACC,KAAP,EAAcD,KAAK,CAACG,UAApB,CAA1E,GAA4GJ,aAAe;IACjJd,KAAM;CATV;;AAYA,MAAM2B,GAAG,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAgBb,KAAhB;;AAAA,SAAsC,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuBa,QAAvB,CAAtC;AAAA,CAAZ;;AAEA,eAAeD,GAAf","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { theme } from '@styles/theme/theme';\nimport { device } from '@styles/tools/breakpoints.styles';\nimport { color } from 'styled-system';\nimport { ColProps } from './Col.types';\n\nconst noCol = 24;\nconst { gutterSpace } = theme.global;\n\nconst getWidthGrid = (value: number, offset: number) => {\n  const width = (value * 100) / noCol;\n  let offsetValue = '';\n\n  if (offset && noCol - value >= offset) {\n    const margin = (offset * 100) / noCol;\n    offsetValue = `margin-left: ${margin.toString().length > 4 ? margin.toFixed(4) : margin}%;`;\n  }\n\n  const widthFixed = width.toString().length > 4 ? width.toFixed(4) : width;\n  return `flex: 0 0 ${widthFixed}%;\n  max-width: ${widthFixed}%;\n  ${offsetValue}`;\n};\n\nconst ResponsiveCol = css`\n  ${(props: ColProps) => props.small && `${device.mobile} {${getWidthGrid(props.small, props.offsetLeft)}}`}\n  ${(props: ColProps) => props.medium && `${device.tablet} {${getWidthGrid(props.medium, props.offsetLeft)}}`}\n  ${(props: ColProps) => props.large && `${device.desktop} {${getWidthGrid(props.large, props.offsetLeft)}}`}\n`;\n\nconst ColCustom = styled.div`\n  position: relative;\n  padding-left: ${(props: ColProps) => (props.noGutter ? 0 : `${gutterSpace / 2}px`)};\n  padding-right: ${(props: ColProps) => (props.noGutter ? 0 : `${gutterSpace / 2}px`)};\n  min-height: 1px;\n  flex-grow: 1;\n  flex-basis: 0;\n  ${(props: ColProps) => props.alignSelf && `align-self: ${props.alignSelf};`}\n  ${(props: ColProps) => (props.small === props.medium && props.small === props.large ? getWidthGrid(props.small, props.offsetLeft) : ResponsiveCol)};\n  ${color}\n`;\n\nconst Col = ({ children, ...props }: ColProps) => <ColCustom {...props}>{children}</ColCustom>;\n\nexport default Col;\n"]},"metadata":{},"sourceType":"module"}