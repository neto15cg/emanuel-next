{"ast":null,"code":"var _jsxFileName = \"/home/eliezer/Projects/nextjs/emanuel/src/components/slyce/grid/box/Box.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { space, color, typography, layout, flexbox } from 'styled-system';\nconst CustomBox = styled.div`\n  ${space}\n  ${color}\n  ${typography}\n  ${layout}\n  ${flexbox}\n  ${props => props.textTransform ? `text-transform: ${props.textTransform}` : ''}\n  ${props => props.textDecoration ? `text-decoration: ${props.textDecoration}` : ''}\n`;\n\nconst Box = props => __jsx(CustomBox, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 34\n  }\n}));\n\nexport default Box;","map":{"version":3,"sources":["/home/eliezer/Projects/nextjs/emanuel/src/components/slyce/grid/box/Box.tsx"],"names":["React","styled","space","color","typography","layout","flexbox","CustomBox","div","props","textTransform","textDecoration","Box"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,MAAnC,EAA2CC,OAA3C,QAA8H,eAA9H;AAUA,MAAMC,SAAc,GAAGN,MAAM,CAACO,GAAI;IAC9BN,KAAM;IACNC,KAAM;IACNC,UAAW;IACXC,MAAO;IACPC,OAAQ;IACPG,KAAD,IAAYA,KAAK,CAACC,aAAN,GAAuB,mBAAkBD,KAAK,CAACC,aAAc,EAA7D,GAAiE,EAAI;IAChFD,KAAD,IAAYA,KAAK,CAACE,cAAN,GAAwB,oBAAmBF,KAAK,CAACE,cAAe,EAAhE,GAAoE,EAAI;CAPxF;;AAUA,MAAMC,GAAG,GAAIH,KAAD,IAAqB,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAEA,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { space, color, typography, layout, flexbox, SpaceProps, ColorProps, TypographyProps, LayoutProps, FlexboxProps } from 'styled-system';\n\ninterface BoxProps extends SpaceProps, ColorProps, TypographyProps, LayoutProps, FlexboxProps {\n  children: React.ReactNode;\n  className?: string;\n  as?: string | React.ComponentType;\n  textTransform?: 'lowercase' | 'uppercase' | 'capitalize' | 'none';\n  textDecoration?: 'overline' | 'line-through' | 'underline' | 'underline overline' | 'none';\n}\n\nconst CustomBox: any = styled.div`\n  ${space}\n  ${color}\n  ${typography}\n  ${layout}\n  ${flexbox}\n  ${(props) => (props.textTransform ? `text-transform: ${props.textTransform}` : '')}\n  ${(props) => (props.textDecoration ? `text-decoration: ${props.textDecoration}` : '')}\n`;\n\nconst Box = (props: BoxProps) => <CustomBox {...props} />;\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}