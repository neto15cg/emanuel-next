{
  "ast": null,
  "code": "var _jsxFileName = \"/home/eliezer/Projects/nextjs/emanuel/src/components/svgIcon/SvgIcon.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport path from 'path';\nimport { maxwidth } from 'styled-system';\nconst CustomSvg = styled(SVG).withConfig({\n  displayName: \"SvgIcon__CustomSvg\",\n  componentId: \"sc-1v6yelk-0\"\n})([\"width:\", \";height:\", \";max-width:100%;min-width:\", \";flex:0 0 \", \";\", \"\"], props => props.width || '16px', props => props.height || '16px', props => props.maxwidth ? `${props.maxwidth} ` : 'auto', props => props.maxwidth || '16px', props => props.fill ? `fill: ${props.theme.colors[props.fill]};` : '');\nexport const SvgIcon = props => {\n  const {\n    src,\n    width,\n    height,\n    fill,\n    className,\n    testId\n  } = props;\n  const {\n    0: isIE,\n    1: setIsIE\n  } = useState(false);\n  useEffect(() => {\n    const isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n\n    if (isIE11) {\n      setIsIE(true);\n    }\n  }, []);\n\n  if (isIE) {\n    return __jsx(CustomSvg, {\n      \"data-testid\": testId,\n      as: \"img\",\n      src: path.resolve(src),\n      width: width,\n      height: height,\n      maxwidth: maxwidth,\n      maxheight: maxheight,\n      alt: \"Icon\",\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(CustomSvg, {\n    \"data-testid\": testId,\n    src: path.resolve(src),\n    width: width,\n    height: height,\n    maxwidth: maxwidth,\n    maxheight: maxheight,\n    fill: fill,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  });\n};\nexport default SvgIcon;",
  "map": {
    "version": 3,
    "sources": ["/home/eliezer/Projects/nextjs/emanuel/src/components/svgIcon/SvgIcon.tsx"],
    "names": [
      "React",
      "useEffect",
      "useState",
      "styled",
      "SVG",
      "path",
      "maxwidth",
      "CustomSvg",
      "props",
      "width",
      "height",
      "fill",
      "theme",
      "colors",
      "SvgIcon",
      "src",
      "className",
      "testId",
      "isIE",
      "setIsIE",
      "isIE11",
      "window",
      "MSInputMethodContext",
      "document",
      "documentMode",
      "resolve",
      "maxheight"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,eAAzB;AAGA,MAAMC,SAAS,GAAGJ,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,gFACJI,KAAK,IAAIA,KAAK,CAACC,KAAN,IAAe,MADpB,EAEHD,KAAK,IAAIA,KAAK,CAACE,MAAN,IAAgB,MAFtB,EAIAF,KAAK,IAAKA,KAAK,CAACF,QAAN,GAAkB,GAAEE,KAAK,CAACF,QAAS,GAAnC,GAAwC,MAJlD,EAKDE,KAAK,IAAIA,KAAK,CAACF,QAAN,IAAkB,MAL1B,EAOXE,KAAK,IAAKA,KAAK,CAACG,IAAN,GAAc,SAAQH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBL,KAAK,CAACG,IAAzB,CAA+B,GAArD,GAA0D,EAPzD,CAAf;AAUA,OAAO,MAAMG,OAAO,GAAIN,KAAD,IAAyB;AAC9C,QAAM;AAAEO,IAAAA,GAAF;AAAON,IAAAA,KAAP;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAtB;AAA4BK,IAAAA,SAA5B;AAAuCC,IAAAA;AAAvC,MAAkDT,KAAxD;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,MAAM,GAAG,CAAC,CAACC,MAAM,CAACC,oBAAT,IAAiC,CAAC,CAAEC,QAAD,CAAkBC,YAApE;;AACA,QAAIJ,MAAJ,EAAY;AACVD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,IAAJ,EAAU;AACR,WAAO,MAAC,SAAD;AAAW,qBAAaD,MAAxB;AAAgC,MAAA,EAAE,EAAC,KAAnC;AAAyC,MAAA,GAAG,EAAEZ,IAAI,CAACoB,OAAL,CAAaV,GAAb,CAA9C;AAAiE,MAAA,KAAK,EAAEN,KAAxE;AAA+E,MAAA,MAAM,EAAEC,MAAvF;AAA+F,MAAA,QAAQ,EAAEJ,QAAzG;AAAmH,MAAA,SAAS,EAAEoB,SAA9H;AAAyI,MAAA,GAAG,EAAC,MAA7I;AAAoJ,MAAA,SAAS,EAAEV,SAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,MAAC,SAAD;AAAW,mBAAaC,MAAxB;AAAgC,IAAA,GAAG,EAAEZ,IAAI,CAACoB,OAAL,CAAaV,GAAb,CAArC;AAAwD,IAAA,KAAK,EAAEN,KAA/D;AAAsE,IAAA,MAAM,EAAEC,MAA9E;AAAsF,IAAA,QAAQ,EAAEJ,QAAhG;AAA0G,IAAA,SAAS,EAAEoB,SAArH;AAAgI,IAAA,IAAI,EAAEf,IAAtI;AAA4I,IAAA,SAAS,EAAEK,SAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhBM;AAkBP,eAAeF,OAAf",
    "sourcesContent": [
      "import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport path from 'path';\nimport { maxwidth } from 'styled-system';\nimport { SvgIconProps } from './SvgIcon.types';\n\nconst CustomSvg = styled(SVG)`\n  width: ${props => props.width || '16px'};\n  height: ${props => props.height || '16px'};\n  max-width: 100%;\n  min-width: ${props => (props.maxwidth ? `${props.maxwidth} ` : 'auto')};\n  flex: 0 0 ${props => props.maxwidth || '16px'};\n\n  ${props => (props.fill ? `fill: ${props.theme.colors[props.fill]};` : '')}\n`;\n\nexport const SvgIcon = (props: SvgIconProps) => {\n  const { src, width, height, fill, className, testId } = props;\n  const [isIE, setIsIE] = useState(false);\n\n  useEffect(() => {\n    const isIE11 = !!window.MSInputMethodContext && !!(document as any).documentMode;\n    if (isIE11) {\n      setIsIE(true);\n    }\n  }, []);\n\n  if (isIE) {\n    return <CustomSvg data-testid={testId} as=\"img\" src={path.resolve(src)} width={width} height={height} maxwidth={maxwidth} maxheight={maxheight} alt=\"Icon\" className={className} />;\n  }\n\n  return <CustomSvg data-testid={testId} src={path.resolve(src)} width={width} height={height} maxwidth={maxwidth} maxheight={maxheight} fill={fill} className={className} />;\n};\n\nexport default SvgIcon;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
