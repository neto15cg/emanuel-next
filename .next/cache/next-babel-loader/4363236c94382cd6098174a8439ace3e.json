{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { theme } from '@styles/theme/theme';\nimport { device } from '@styles/tools/breakpoints.styles';\nimport { color } from 'styled-system';\nconst noCol = 24;\nconst {\n  gutterSpace\n} = theme.global;\n\nconst getWidthGrid = (value, offset) => {\n  const width = value * 100 / noCol;\n  let offsetValue = '';\n\n  if (offset && noCol - value >= offset) {\n    const margin = offset * 100 / noCol;\n    offsetValue = `margin-left: ${margin.toString().length > 4 ? margin.toFixed(4) : margin}%;`;\n  }\n\n  const widthFixed = width.toString().length > 4 ? width.toFixed(4) : width;\n  return `flex: 0 0 ${widthFixed}%;\n  max-width: ${widthFixed}%;\n  ${offsetValue}`;\n};\n\nconst ResponsiveCol = css([\"\", \" \", \" \", \"\"], props => props.small && `${device.mobile} {${getWidthGrid(props.small, props.offsetLeft)}}`, props => props.medium && `${device.tablet} {${getWidthGrid(props.medium, props.offsetLeft)}}`, props => props.large && `${device.desktop} {${getWidthGrid(props.large, props.offsetLeft)}}`);\nconst ColCustom = styled.div.withConfig({\n  displayName: \"Col__ColCustom\",\n  componentId: \"so1l03-0\"\n})([\"position:relative;padding-left:\", \";padding-right:\", \";min-height:1px;flex-grow:1;flex-basis:0;\", \" \", \";\", \"\"], props => props.noGutter ? 0 : `${gutterSpace / 2}px`, props => props.noGutter ? 0 : `${gutterSpace / 2}px`, props => props.alignSelf && `align-self: ${props.alignSelf};`, props => props.small === props.medium && props.small === props.large ? getWidthGrid(props.small, props.offsetLeft) : ResponsiveCol, color);\n\nconst Col = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(ColCustom, props, children);\n};\n\nexport default Col;","map":null,"metadata":{},"sourceType":"module"}