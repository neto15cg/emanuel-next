{"ast":null,"code":"var _jsxFileName = \"/home/eliezer/Projects/nextjs/emanuel/src/components/ButtonContact/ButtonContact.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ButtonContactStyled } from './ButtonContact.styles';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nconst ButtonContact = () => {\n  const {\n    0: modalIsOpen,\n    1: setModalIsOpen\n  } = useState(false);\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ButtonContactStyled, {\n    isWeb: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Entre em contato\"), __jsx(ButtonContactStyled, {\n    isMobile: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Entre em contato\"), __jsx(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Hello\"), __jsx(\"button\", {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"close\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"I am a modal\"), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"tab navigation\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"stays\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"inside\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"the modal\"))));\n};\n\nexport default ButtonContact;","map":{"version":3,"sources":["/home/eliezer/Projects/nextjs/emanuel/src/components/ButtonContact/ButtonContact.tsx"],"names":["React","useState","Modal","ButtonContactStyled","customStyles","content","top","left","right","bottom","marginRight","transform","ButtonContact","modalIsOpen","setModalIsOpen","afterOpenModal","subtitle","style","color","closeModal","setIsOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,KADE;AAEPC,IAAAA,IAAI,EAAE,KAFC;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,WAAW,EAAE,MALN;AAMPC,IAAAA,SAAS,EAAE;AANJ;AADU,CAArB;;AAWA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,KAAD,CAA9C;;AAEA,WAASc,cAAT,GAA0B;AACxB;AACAC,IAAAA,QAAQ,CAACC,KAAT,CAAeC,KAAf,GAAuB,MAAvB;AACD;;AAED,WAASC,UAAT,GAAsB;AACpBC,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,SACE,4BACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,mBAAD;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAIE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEP,WAAf;AAA4B,IAAA,WAAW,EAAEE,cAAzC;AAAyD,IAAA,cAAc,EAAEI,UAAzE;AAAqF,IAAA,KAAK,EAAEf,YAA5F;AAA0G,IAAA,YAAY,EAAC,eAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,OAAO,EAAEe,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CAJF,CAJF,CADF;AAmBD,CA9BD;;AAgCA,eAAeP,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ButtonContactStyled } from './ButtonContact.styles';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst ButtonContact = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return (\n    <>\n      <ButtonContactStyled isWeb>Entre em contato</ButtonContactStyled>\n      <ButtonContactStyled isMobile>Entre em contato</ButtonContactStyled>\n\n      <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\n        <h2>Hello</h2>\n        <button onClick={closeModal}>close</button>\n        <div>I am a modal</div>\n        <form>\n          <input />\n          <button>tab navigation</button>\n          <button>stays</button>\n          <button>inside</button>\n          <button>the modal</button>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default ButtonContact;\n"]},"metadata":{},"sourceType":"module"}