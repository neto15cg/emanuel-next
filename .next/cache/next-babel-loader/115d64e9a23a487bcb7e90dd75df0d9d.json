{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { theme } from '@styles/theme/theme';\nimport { device } from '@styles/tools/breakpoints.styles';\nimport { color } from 'styled-system';\nvar noCol = 24;\nvar gutterSpace = theme.global.gutterSpace;\n\nvar getWidthGrid = function getWidthGrid(value, offset) {\n  var width = value * 100 / noCol;\n  var offsetValue = '';\n\n  if (offset && noCol - value >= offset) {\n    var margin = offset * 100 / noCol;\n    offsetValue = \"margin-left: \".concat(margin.toString().length > 4 ? margin.toFixed(4) : margin, \"%;\");\n  }\n\n  var widthFixed = width.toString().length > 4 ? width.toFixed(4) : width;\n  return \"flex: 0 0 \".concat(widthFixed, \"%;\\n  max-width: \").concat(widthFixed, \"%;\\n  \").concat(offsetValue);\n};\n\nvar ResponsiveCol = css([\"\", \" \", \" \", \"\"], function (props) {\n  return props.small && \"\".concat(device.mobile, \" {\").concat(getWidthGrid(props.small, props.offsetLeft), \"}\");\n}, function (props) {\n  return props.medium && \"\".concat(device.tablet, \" {\").concat(getWidthGrid(props.medium, props.offsetLeft), \"}\");\n}, function (props) {\n  return props.large && \"\".concat(device.desktop, \" {\").concat(getWidthGrid(props.large, props.offsetLeft), \"}\");\n});\nvar ColCustom = styled.div.withConfig({\n  displayName: \"Col__ColCustom\",\n  componentId: \"so1l03-0\"\n})([\"position:relative;padding-left:\", \";padding-right:\", \";min-height:1px;flex-grow:1;flex-basis:0;\", \" \", \";\", \"\"], function (props) {\n  return props.noGutter ? 0 : \"\".concat(gutterSpace / 2, \"px\");\n}, function (props) {\n  return props.noGutter ? 0 : \"\".concat(gutterSpace / 2, \"px\");\n}, function (props) {\n  return props.alignSelf && \"align-self: \".concat(props.alignSelf, \";\");\n}, function (props) {\n  return props.small === props.medium && props.small === props.large ? getWidthGrid(props.small, props.offsetLeft) : ResponsiveCol;\n}, color);\n\nvar Col = function Col(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(ColCustom, props, children);\n};\n\nexport default Col;","map":null,"metadata":{},"sourceType":"module"}