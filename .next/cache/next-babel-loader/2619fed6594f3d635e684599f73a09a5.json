{
  "ast": null,
  "code": "var _this = this,\n    _jsxFileName = \"/home/eliezer/Projects/nextjs/emanuel/src/components/svgIcon/SvgIcon.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport path from 'path';\nvar CustomSvg = styled(SVG).withConfig({\n  displayName: \"SvgIcon__CustomSvg\",\n  componentId: \"sc-1v6yelk-0\"\n})([\"width:\", \";height:\", \";max-width:\", \";min-width:\", \";flex:0 0 \", \";\", \"\"], function (props) {\n  return props.width || '16px';\n}, function (props) {\n  return props.height || '16px';\n}, function (props) {\n  return props.maxwidth || '100%';\n}, function (props) {\n  return props.maxwidth ? \"\".concat(props.maxwidth) : props.width || 'auto';\n}, function (props) {\n  return props.maxwidth || '16px';\n}, function (props) {\n  return props.fill ? \"fill: \".concat(props.theme.colors[props.fill], \";\") : '';\n});\n_c = CustomSvg;\nexport var SvgIcon = function SvgIcon(props) {\n  _s();\n\n  var src = props.src,\n      width = props.width,\n      height = props.height,\n      maxwidth = props.maxwidth,\n      maxheight = props.maxheight,\n      fill = props.fill,\n      className = props.className,\n      testId = props.testId;\n\n  var _useState = useState(false),\n      isIE = _useState[0],\n      setIsIE = _useState[1];\n\n  useEffect(function () {\n    var isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n\n    if (isIE11) {\n      setIsIE(true);\n    }\n  }, []);\n\n  if (isIE) {\n    return __jsx(CustomSvg, {\n      \"data-testid\": testId,\n      as: \"img\",\n      src: path.resolve(src),\n      width: width,\n      height: height,\n      maxwidth: maxwidth,\n      maxheight: maxheight,\n      alt: \"Icon\",\n      className: className,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(CustomSvg, {\n    \"data-testid\": testId,\n    src: path.resolve(src),\n    width: width,\n    height: height,\n    maxwidth: maxwidth,\n    maxheight: maxheight,\n    fill: fill,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(SvgIcon, \"WAopMZXw/NSrA0vvRCPOKGONcMs=\");\n\n_c2 = SvgIcon;\nexport default SvgIcon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomSvg\");\n$RefreshReg$(_c2, \"SvgIcon\");",
  "map": {
    "version": 3,
    "sources": ["/home/eliezer/Projects/nextjs/emanuel/src/components/svgIcon/SvgIcon.tsx"],
    "names": [
      "React",
      "useEffect",
      "useState",
      "styled",
      "SVG",
      "path",
      "CustomSvg",
      "props",
      "width",
      "height",
      "maxwidth",
      "fill",
      "theme",
      "colors",
      "SvgIcon",
      "src",
      "maxheight",
      "className",
      "testId",
      "isIE",
      "setIsIE",
      "isIE11",
      "window",
      "MSInputMethodContext",
      "document",
      "documentMode",
      "resolve"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport path from 'path';\nimport { SvgIconProps } from './SvgIcon.types';\n\nconst CustomSvg = styled(SVG)`\n  width: ${props => props.width || '16px'};\n  height: ${props => props.height || '16px'};\n  max-width: ${props => props.maxwidth || '100%'};\n  min-width: ${props => (props.maxwidth ? `${props.maxwidth}` : props.width || 'auto')};\n  flex: 0 0 ${props => props.maxwidth || '16px'};\n\n  ${props => (props.fill ? `fill: ${props.theme.colors[props.fill]};` : '')}\n`;\n\nexport const SvgIcon = (props: SvgIconProps) => {\n  const { src, width, height, maxwidth, maxheight, fill, className, testId } = props;\n  const [isIE, setIsIE] = useState(false);\n\n  useEffect(() => {\n    const isIE11 = !!window.MSInputMethodContext && !!(document as any).documentMode;\n    if (isIE11) {\n      setIsIE(true);\n    }\n  }, []);\n\n  if (isIE) {\n    return <CustomSvg data-testid={testId} as=\"img\" src={path.resolve(src)} width={width} height={height} maxwidth={maxwidth} maxheight={maxheight} alt=\"Icon\" className={className} />;\n  }\n\n  return <CustomSvg data-testid={testId} src={path.resolve(src)} width={width} height={height} maxwidth={maxwidth} maxheight={maxheight} fill={fill} className={className} />;\n};\n\nexport default SvgIcon;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
